name: Host Remote Zen MCP

on:
  workflow_dispatch:

jobs:
  host-mcp:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # Max 6 hours (360 minutes)

    steps:
      - name: Checkout repository (optional if no custom code needed)
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Clone Zen MCP Server repository
        run: git clone https://github.com/BeehiveInnovations/zen-mcp-server.git

      - name: Configure Zen MCP environment
        working-directory: zen-mcp-server
        run: |
          # Configure Zen MCP with OpenRouter API key
          echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_TOKEN }}" > .env

      - name: Make run script executable
        working-directory: zen-mcp-server
        run: chmod +x run-server.sh

      - name: Start Zen MCP server
        working-directory: zen-mcp-server
        run: |
          # The run-server.sh script sets up the environment but exits
          # We need to run the actual server after setup
          echo "Setting up Zen MCP environment..."
          ./run-server.sh || true
          
          # Check if server.py exists
          if [ ! -f server.py ]; then
            echo "server.py not found, looking for alternative startup files..."
            ls -la
            find . -name "*.py" -type f | head -20
          fi
          
          # Now start the actual server
          echo "Starting MCP server..."
          source .venv/bin/activate 2>/dev/null || source venv/bin/activate 2>/dev/null || true
          
          # Start the server directly using server.py
          if [ -f server.py ]; then
            nohup python server.py > server.log 2>&1 &
          else
            # Try alternate paths
            echo "Trying to find the correct startup script..."
            if [ -f src/server.py ]; then
              nohup python src/server.py > server.log 2>&1 &
            elif [ -f zen_mcp/server.py ]; then
              nohup python zen_mcp/server.py > server.log 2>&1 &
            else
              echo "Could not find server startup script!"
              exit 1
            fi
          fi
          
          SERVER_PID=$!
          echo "Server started with PID: $SERVER_PID"
          
          # Wait for server to start
          echo "Waiting for MCP server to start..."
          for i in {1..30}; do
            if curl -s http://localhost:3000 > /dev/null 2>&1; then
              echo "✅ Zen MCP server started successfully on port 3000"
              break
            fi
            echo "Waiting... ($i/30)"
            sleep 2
          done
          
          # Check if server is actually running
          if ! curl -s http://localhost:3000 > /dev/null 2>&1; then
            echo "❌ Failed to start MCP server. Logs:"
            cat server.log
            echo "---"
            ps aux | grep -E "python|server" | grep -v grep
            exit 1
          fi

      - name: Set up Cloudflare Tunnel
        uses: AnimMouse/setup-cloudflared@v1
        with:
          cloudflare_tunnel_credential: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}

      - name: Display endpoint info
        run: |
          echo "==================================="
          echo "Zen MCP is now accessible at:"
          echo "https://mcp.pavlovcik.com"
          echo "==================================="
          # Test the public endpoint
          sleep 5
          if curl -s https://mcp.pavlovcik.com > /dev/null 2>&1; then
            echo "✅ Public endpoint is working!"
          else
            echo "⚠️  Public endpoint may still be initializing..."
          fi

      - name: Keep server running for up to 6 hours
        run: |
          # Sleep for 5 hours 50 minutes to stay under 6-hour limit (accounting for startup time)
          sleep 21000
          echo "Server shutting down after timeout"